/**
 * generated by Xtext
 */
package de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.ui.labeling;

import com.google.inject.Inject;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.BooleanRule;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.CompareProbability;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.Label;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.Next;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.Probability;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.QuantifiedProbability;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.State;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.SteadyState;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
@SuppressWarnings("all")
public class PCTLLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public PCTLLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final QuantifiedProbability o) {
    return "Quantified Probability";
  }
  
  public String text(final SteadyState o) {
    return "Steady State Probability";
  }
  
  public String text(final BooleanRule o) {
    return "Boolean Evaluation";
  }
  
  public String text(final Probability o) {
    CompareProbability _comparator = o.getComparator();
    String _operator = _comparator.getOperator();
    String _plus = ("Probability is " + _operator);
    String _plus_1 = (_plus + " ");
    CompareProbability _comparator_1 = o.getComparator();
    double _value = _comparator_1.getValue();
    return (_plus_1 + Double.valueOf(_value));
  }
  
  public String text(final Next o) {
    return "Next State";
  }
  
  public String text(final de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.pCTL.Boolean o) {
    return o.getValue();
  }
  
  public String text(final State o) {
    String _value = o.getValue();
    return ("State:" + _value);
  }
  
  public String text(final Label o) {
    String _value = o.getValue();
    return ("Label:" + _value);
  }
}
