/*
* generated by Xtext
*/
grammar InternalPCTL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.services.PCTLGrammarAccess;

}

@parser::members {
 
 	private PCTLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PCTLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStart
entryRuleStart 
:
{ before(grammarAccess.getStartRule()); }
	 ruleStart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule Start
ruleStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartAccess().getAlternatives()); }
(rule__Start__Alternatives)
{ after(grammarAccess.getStartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getAlternatives()); }
(rule__State__Alternatives)
{ after(grammarAccess.getStateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getAlternatives()); }
(rule__Label__Alternatives)
{ after(grammarAccess.getLabelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateOrLabel
entryRuleStateOrLabel 
:
{ before(grammarAccess.getStateOrLabelRule()); }
	 ruleStateOrLabel
{ after(grammarAccess.getStateOrLabelRule()); } 
	 EOF 
;

// Rule StateOrLabel
ruleStateOrLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateOrLabelAccess().getAlternatives()); }
(rule__StateOrLabel__Alternatives)
{ after(grammarAccess.getStateOrLabelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleS
entryRuleS 
:
{ before(grammarAccess.getSRule()); }
	 ruleS
{ after(grammarAccess.getSRule()); } 
	 EOF 
;

// Rule S
ruleS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSAccess().getGroup()); }
(rule__S__Group__0)
{ after(grammarAccess.getSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleP1
entryRuleP1 
:
{ before(grammarAccess.getP1Rule()); }
	 ruleP1
{ after(grammarAccess.getP1Rule()); } 
	 EOF 
;

// Rule P1
ruleP1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getP1Access().getGroup()); }
(rule__P1__Group__0)
{ after(grammarAccess.getP1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleP
entryRuleP 
:
{ before(grammarAccess.getPRule()); }
	 ruleP
{ after(grammarAccess.getPRule()); } 
	 EOF 
;

// Rule P
ruleP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPAccess().getGroup()); }
(rule__P__Group__0)
{ after(grammarAccess.getPAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleX
entryRuleX 
:
{ before(grammarAccess.getXRule()); }
	 ruleX
{ after(grammarAccess.getXRule()); } 
	 EOF 
;

// Rule X
ruleX
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAccess().getXKeyword()); }
(
	'X' 
)*
{ after(grammarAccess.getXAccess().getXKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleF
entryRuleF 
:
{ before(grammarAccess.getFRule()); }
	 ruleF
{ after(grammarAccess.getFRule()); } 
	 EOF 
;

// Rule F
ruleF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFAccess().getGroup()); }
(rule__F__Group__0)
{ after(grammarAccess.getFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleG
entryRuleG 
:
{ before(grammarAccess.getGRule()); }
	 ruleG
{ after(grammarAccess.getGRule()); } 
	 EOF 
;

// Rule G
ruleG
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGAccess().getGroup()); }
(rule__G__Group__0)
{ after(grammarAccess.getGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleU
entryRuleU 
:
{ before(grammarAccess.getURule()); }
	 ruleU
{ after(grammarAccess.getURule()); } 
	 EOF 
;

// Rule U
ruleU
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUAccess().getGroup()); }
(rule__U__Group__0)
{ after(grammarAccess.getUAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompare
entryRuleCompare 
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareAccess().getAlternatives()); }
(rule__Compare__Alternatives)
{ after(grammarAccess.getCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareWithoutUnknown
entryRuleCompareWithoutUnknown 
:
{ before(grammarAccess.getCompareWithoutUnknownRule()); }
	 ruleCompareWithoutUnknown
{ after(grammarAccess.getCompareWithoutUnknownRule()); } 
	 EOF 
;

// Rule CompareWithoutUnknown
ruleCompareWithoutUnknown
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getAlternatives()); }
(rule__CompareWithoutUnknown__Alternatives)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeBound
entryRuleTimeBound 
:
{ before(grammarAccess.getTimeBoundRule()); }
	 ruleTimeBound
{ after(grammarAccess.getTimeBoundRule()); } 
	 EOF 
;

// Rule TimeBound
ruleTimeBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeBoundAccess().getAlternatives()); }
(rule__TimeBound__Alternatives)?
{ after(grammarAccess.getTimeBoundAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDECIMAL
entryRuleDECIMAL 
:
{ before(grammarAccess.getDECIMALRule()); }
	 ruleDECIMAL
{ after(grammarAccess.getDECIMALRule()); } 
	 EOF 
;

// Rule DECIMAL
ruleDECIMAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDECIMALAccess().getGroup()); }
(rule__DECIMAL__Group__0)
{ after(grammarAccess.getDECIMALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Start__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getStartAssignment_0()); }
(rule__Start__StartAssignment_0)
{ after(grammarAccess.getStartAccess().getStartAssignment_0()); }
)

    |(
{ before(grammarAccess.getStartAccess().getP1ParserRuleCall_1()); }
	ruleP1
{ after(grammarAccess.getStartAccess().getP1ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_0()); }
(rule__State__Group_0__0)
{ after(grammarAccess.getStateAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_1()); }
(rule__State__Group_1__0)
{ after(grammarAccess.getStateAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getGroup_0()); }
(rule__Label__Group_0__0)
{ after(grammarAccess.getLabelAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLabelAccess().getGroup_1()); }
(rule__Label__Group_1__0)
{ after(grammarAccess.getLabelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateOrLabel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateOrLabelAccess().getStateParserRuleCall_0()); }
	ruleState
{ after(grammarAccess.getStateOrLabelAccess().getStateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStateOrLabelAccess().getLabelParserRuleCall_1()); }
	ruleLabel
{ after(grammarAccess.getStateOrLabelAccess().getLabelParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getPParserRuleCall_3_0()); }
	ruleP
{ after(grammarAccess.getP1Access().getPParserRuleCall_3_0()); }
)

    |(
{ before(grammarAccess.getP1Access().getSParserRuleCall_3_1()); }
	ruleS
{ after(grammarAccess.getP1Access().getSParserRuleCall_3_1()); }
)

    |(
{ before(grammarAccess.getP1Access().getFParserRuleCall_3_2()); }
	ruleF
{ after(grammarAccess.getP1Access().getFParserRuleCall_3_2()); }
)

    |(
{ before(grammarAccess.getP1Access().getUParserRuleCall_3_3()); }
	ruleU
{ after(grammarAccess.getP1Access().getUParserRuleCall_3_3()); }
)

    |(
{ before(grammarAccess.getP1Access().getGParserRuleCall_3_4()); }
	ruleG
{ after(grammarAccess.getP1Access().getGParserRuleCall_3_4()); }
)

    |(
{ before(grammarAccess.getP1Access().getGroup_3_5()); }
(rule__P1__Group_3_5__0)
{ after(grammarAccess.getP1Access().getGroup_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__P__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getPParserRuleCall_3_0()); }
	ruleP
{ after(grammarAccess.getPAccess().getPParserRuleCall_3_0()); }
)

    |(
{ before(grammarAccess.getPAccess().getSParserRuleCall_3_1()); }
	ruleS
{ after(grammarAccess.getPAccess().getSParserRuleCall_3_1()); }
)

    |(
{ before(grammarAccess.getPAccess().getFParserRuleCall_3_2()); }
	ruleF
{ after(grammarAccess.getPAccess().getFParserRuleCall_3_2()); }
)

    |(
{ before(grammarAccess.getPAccess().getUParserRuleCall_3_3()); }
	ruleU
{ after(grammarAccess.getPAccess().getUParserRuleCall_3_3()); }
)

    |(
{ before(grammarAccess.getPAccess().getGParserRuleCall_3_4()); }
	ruleG
{ after(grammarAccess.getPAccess().getGParserRuleCall_3_4()); }
)

    |(
{ before(grammarAccess.getPAccess().getGroup_3_5()); }
(rule__P__Group_3_5__0)
{ after(grammarAccess.getPAccess().getGroup_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__U__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getUKeyword_1_0()); }

	'U' 

{ after(grammarAccess.getUAccess().getUKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getUAccess().getWKeyword_1_1()); }

	'W' 

{ after(grammarAccess.getUAccess().getWKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getUAccess().getRKeyword_1_2()); }

	'R' 

{ after(grammarAccess.getUAccess().getRKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getCompareWithoutUnknownParserRuleCall_0()); }
	ruleCompareWithoutUnknown
{ after(grammarAccess.getCompareAccess().getCompareWithoutUnknownParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCompareAccess().getEqualsSignQuestionMarkKeyword_1()); }

	'=?' 

{ after(grammarAccess.getCompareAccess().getEqualsSignQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_0()); }
(rule__CompareWithoutUnknown__Group_0__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_1()); }
(rule__CompareWithoutUnknown__Group_1__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_2()); }
(rule__CompareWithoutUnknown__Group_2__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_3()); }
(rule__CompareWithoutUnknown__Group_3__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getGroup_0()); }
(rule__TimeBound__Group_0__0)
{ after(grammarAccess.getTimeBoundAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTimeBoundAccess().getGroup_1()); }
(rule__TimeBound__Group_1__0)
{ after(grammarAccess.getTimeBoundAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTimeBoundAccess().getGroup_2()); }
(rule__TimeBound__Group_2__0)
{ after(grammarAccess.getTimeBoundAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTimeBoundAccess().getGroup_3()); }
(rule__TimeBound__Group_3__0)
{ after(grammarAccess.getTimeBoundAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__State__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__0__Impl
	rule__State__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getStateAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__1__Impl
	rule__State__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_0_1()); }

	'State:' 

{ after(grammarAccess.getStateAccess().getStateKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__2__Impl
	rule__State__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_0_2()); }
(rule__State__NameAssignment_0_2)
{ after(grammarAccess.getStateAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getStateAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__State__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1__0__Impl
	rule__State__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_1_0()); }

	'State:' 

{ after(grammarAccess.getStateAccess().getStateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1_1()); }
(rule__State__NameAssignment_1_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Label__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__0__Impl
	rule__Label__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getLabelAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__1__Impl
	rule__Label__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelKeyword_0_1()); }

	'Label:' 

{ after(grammarAccess.getLabelAccess().getLabelKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__2__Impl
	rule__Label__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_0_2()); }
(rule__Label__NameAssignment_0_2)
{ after(grammarAccess.getLabelAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getLabelAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Label__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_1__0__Impl
	rule__Label__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelKeyword_1_0()); }

	'Label:' 

{ after(grammarAccess.getLabelAccess().getLabelKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_1_1()); }
(rule__Label__NameAssignment_1_1)
{ after(grammarAccess.getLabelAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__S__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__0__Impl
	rule__S__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getSKeyword_0()); }

	'S' 

{ after(grammarAccess.getSAccess().getSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__1__Impl
	rule__S__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getCompareParserRuleCall_1()); }
	ruleCompare
{ after(grammarAccess.getSAccess().getCompareParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__2__Impl
	rule__S__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getSAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__3__Impl
	rule__S__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getStateOrLabelParserRuleCall_3()); }
	ruleStateOrLabel
{ after(grammarAccess.getSAccess().getStateOrLabelParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getSAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__P1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P1__Group__0__Impl
	rule__P1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getPKeyword_0()); }

	'P' 

{ after(grammarAccess.getP1Access().getPKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P1__Group__1__Impl
	rule__P1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getCompareParserRuleCall_1()); }
	ruleCompare
{ after(grammarAccess.getP1Access().getCompareParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P1__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P1__Group__2__Impl
	rule__P1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getP1Access().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P1__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P1__Group__3__Impl
	rule__P1__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getAlternatives_3()); }
(rule__P1__Alternatives_3)
{ after(grammarAccess.getP1Access().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P1__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P1__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getP1Access().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__P1__Group_3_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P1__Group_3_5__0__Impl
	rule__P1__Group_3_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Group_3_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getXParserRuleCall_3_5_0()); }
	ruleX
{ after(grammarAccess.getP1Access().getXParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P1__Group_3_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P1__Group_3_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__P1__Group_3_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getP1Access().getStateOrLabelParserRuleCall_3_5_1()); }
	ruleStateOrLabel
{ after(grammarAccess.getP1Access().getStateOrLabelParserRuleCall_3_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__P__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group__0__Impl
	rule__P__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getPKeyword_0()); }

	'P' 

{ after(grammarAccess.getPAccess().getPKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group__1__Impl
	rule__P__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getCompareWithoutUnknownParserRuleCall_1()); }
	ruleCompareWithoutUnknown
{ after(grammarAccess.getPAccess().getCompareWithoutUnknownParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group__2__Impl
	rule__P__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getPAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group__3__Impl
	rule__P__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getAlternatives_3()); }
(rule__P__Alternatives_3)
{ after(grammarAccess.getPAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getPAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__P__Group_3_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_3_5__0__Impl
	rule__P__Group_3_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_3_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getXParserRuleCall_3_5_0()); }
	ruleX
{ after(grammarAccess.getPAccess().getXParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_3_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_3_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_3_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getStateOrLabelParserRuleCall_3_5_1()); }
	ruleStateOrLabel
{ after(grammarAccess.getPAccess().getStateOrLabelParserRuleCall_3_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__F__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__F__Group__0__Impl
	rule__F__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAccess().getFKeyword_0()); }

	'F' 

{ after(grammarAccess.getFAccess().getFKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__F__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__F__Group__1__Impl
	rule__F__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__F__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAccess().getGroup_1()); }
(rule__F__Group_1__0)
{ after(grammarAccess.getFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__F__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__F__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAccess().getRIGHTAssignment_2()); }
(rule__F__RIGHTAssignment_2)
{ after(grammarAccess.getFAccess().getRIGHTAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__F__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__F__Group_1__0__Impl
	rule__F__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__F__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAccess().getTimeBoundParserRuleCall_1_0()); }
	ruleTimeBound
{ after(grammarAccess.getFAccess().getTimeBoundParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__F__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__F__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__F__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAccess().getXParserRuleCall_1_1()); }
	ruleX
{ after(grammarAccess.getFAccess().getXParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__G__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group__0__Impl
	rule__G__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getGKeyword_0()); }

	'G' 

{ after(grammarAccess.getGAccess().getGKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__G__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group__1__Impl
	rule__G__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getGroup_1()); }
(rule__G__Group_1__0)
{ after(grammarAccess.getGAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__G__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group__2__Impl
	rule__G__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getGAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__G__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group__3__Impl
	rule__G__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getLEFTAssignment_3()); }
(rule__G__LEFTAssignment_3)
{ after(grammarAccess.getGAccess().getLEFTAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__G__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group__4__Impl
	rule__G__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getEqualsSignGreaterThanSignKeyword_4()); }

	'=>' 

{ after(grammarAccess.getGAccess().getEqualsSignGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__G__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group__5__Impl
	rule__G__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getRIGHTAssignment_5()); }
(rule__G__RIGHTAssignment_5)
{ after(grammarAccess.getGAccess().getRIGHTAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__G__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getGAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__G__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group_1__0__Impl
	rule__G__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getTimeBoundParserRuleCall_1_0()); }
	ruleTimeBound
{ after(grammarAccess.getGAccess().getTimeBoundParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__G__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__G__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__G__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getXParserRuleCall_1_1()); }
	ruleX
{ after(grammarAccess.getGAccess().getXParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__U__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__U__Group__0__Impl
	rule__U__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__U__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getLEFTAssignment_0()); }
(rule__U__LEFTAssignment_0)
{ after(grammarAccess.getUAccess().getLEFTAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__U__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__U__Group__1__Impl
	rule__U__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__U__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getAlternatives_1()); }
(rule__U__Alternatives_1)
{ after(grammarAccess.getUAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__U__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__U__Group__2__Impl
	rule__U__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__U__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getGroup_2()); }
(rule__U__Group_2__0)
{ after(grammarAccess.getUAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__U__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__U__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__U__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getRIGHTAssignment_3()); }
(rule__U__RIGHTAssignment_3)
{ after(grammarAccess.getUAccess().getRIGHTAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__U__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__U__Group_2__0__Impl
	rule__U__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__U__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getTimeBoundParserRuleCall_2_0()); }
	ruleTimeBound
{ after(grammarAccess.getUAccess().getTimeBoundParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__U__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__U__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__U__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getXParserRuleCall_2_1()); }
	ruleX
{ after(grammarAccess.getUAccess().getXParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareWithoutUnknown__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_0__0__Impl
	rule__CompareWithoutUnknown__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignKeyword_0_0()); }

	'>' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_0_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareWithoutUnknown__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_1__0__Impl
	rule__CompareWithoutUnknown__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_1_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareWithoutUnknown__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_2__0__Impl
	rule__CompareWithoutUnknown__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignEqualsSignKeyword_2_0()); }

	'>=' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_2_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareWithoutUnknown__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_3__0__Impl
	rule__CompareWithoutUnknown__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignEqualsSignKeyword_3_0()); }

	'<=' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_3_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeBound__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_0__0__Impl
	rule__TimeBound__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getGreaterThanSignEqualsSignKeyword_0_0()); }

	'>=' 

{ after(grammarAccess.getTimeBoundAccess().getGreaterThanSignEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_0_1()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeBound__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_1__0__Impl
	rule__TimeBound__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getLessThanSignEqualsSignKeyword_1_0()); }

	'<=' 

{ after(grammarAccess.getTimeBoundAccess().getLessThanSignEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_1_1()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeBound__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_2__0__Impl
	rule__TimeBound__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getTimeBoundAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_2_1()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeBound__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_3__0__Impl
	rule__TimeBound__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getTimeBoundAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_3__1__Impl
	rule__TimeBound__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_3_1()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_3__2__Impl
	rule__TimeBound__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getCommaKeyword_3_2()); }

	',' 

{ after(grammarAccess.getTimeBoundAccess().getCommaKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_3__3__Impl
	rule__TimeBound__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_3_3()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getRightSquareBracketKeyword_3_4()); }

	']' 

{ after(grammarAccess.getTimeBoundAccess().getRightSquareBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DECIMAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group__0__Impl
	rule__DECIMAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DECIMAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getGroup_1()); }
(rule__DECIMAL__Group_1__0)?
{ after(grammarAccess.getDECIMALAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DECIMAL__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group_1__0__Impl
	rule__DECIMAL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDECIMALAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DECIMAL__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Start__StartAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getStartSParserRuleCall_0_0()); }
	ruleS{ after(grammarAccess.getStartAccess().getStartSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__F__RIGHTAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFAccess().getRIGHTStateOrLabelParserRuleCall_2_0()); }
	ruleStateOrLabel{ after(grammarAccess.getFAccess().getRIGHTStateOrLabelParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__G__LEFTAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getLEFTStateOrLabelParserRuleCall_3_0()); }
	ruleStateOrLabel{ after(grammarAccess.getGAccess().getLEFTStateOrLabelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__G__RIGHTAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAccess().getRIGHTPParserRuleCall_5_0()); }
	ruleP{ after(grammarAccess.getGAccess().getRIGHTPParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__U__LEFTAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getLEFTStateOrLabelParserRuleCall_0_0()); }
	ruleStateOrLabel{ after(grammarAccess.getUAccess().getLEFTStateOrLabelParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__U__RIGHTAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUAccess().getRIGHTStateOrLabelParserRuleCall_3_0()); }
	ruleStateOrLabel{ after(grammarAccess.getUAccess().getRIGHTStateOrLabelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


