/*
* generated by Xtext
*/
grammar InternalPCTL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.uni_stuttgart.iste.cowolf.model.ctmc.xtext.services.PCTLGrammarAccess;

}

@parser::members {
 
 	private PCTLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PCTLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStart
entryRuleStart 
:
{ before(grammarAccess.getStartRule()); }
	 ruleStart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule Start
ruleStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartAccess().getAlternatives()); }
(rule__Start__Alternatives)
{ after(grammarAccess.getStartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getAlternatives()); }
(rule__State__Alternatives)
{ after(grammarAccess.getStateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getAlternatives()); }
(rule__Label__Alternatives)
{ after(grammarAccess.getLabelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateOrLabel
entryRuleStateOrLabel 
:
{ before(grammarAccess.getStateOrLabelRule()); }
	 ruleStateOrLabel
{ after(grammarAccess.getStateOrLabelRule()); } 
	 EOF 
;

// Rule StateOrLabel
ruleStateOrLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateOrLabelAccess().getAlternatives()); }
(rule__StateOrLabel__Alternatives)
{ after(grammarAccess.getStateOrLabelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleS
entryRuleS 
:
{ before(grammarAccess.getSRule()); }
	 ruleS
{ after(grammarAccess.getSRule()); } 
	 EOF 
;

// Rule S
ruleS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSAccess().getGroup()); }
(rule__S__Group__0)
{ after(grammarAccess.getSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleP
entryRuleP 
:
{ before(grammarAccess.getPRule()); }
	 ruleP
{ after(grammarAccess.getPRule()); } 
	 EOF 
;

// Rule P
ruleP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPAccess().getAlternatives()); }
(rule__P__Alternatives)
{ after(grammarAccess.getPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePG
entryRulePG 
:
{ before(grammarAccess.getPGRule()); }
	 rulePG
{ after(grammarAccess.getPGRule()); } 
	 EOF 
;

// Rule PG
rulePG
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPGAccess().getGroup()); }
(rule__PG__Group__0)
{ after(grammarAccess.getPGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompare
entryRuleCompare 
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareAccess().getAlternatives()); }
(rule__Compare__Alternatives)
{ after(grammarAccess.getCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareWithoutUnknown
entryRuleCompareWithoutUnknown 
:
{ before(grammarAccess.getCompareWithoutUnknownRule()); }
	 ruleCompareWithoutUnknown
{ after(grammarAccess.getCompareWithoutUnknownRule()); } 
	 EOF 
;

// Rule CompareWithoutUnknown
ruleCompareWithoutUnknown
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getAlternatives()); }
(rule__CompareWithoutUnknown__Alternatives)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeBound
entryRuleTimeBound 
:
{ before(grammarAccess.getTimeBoundRule()); }
	 ruleTimeBound
{ after(grammarAccess.getTimeBoundRule()); } 
	 EOF 
;

// Rule TimeBound
ruleTimeBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeBoundAccess().getAlternatives()); }
(rule__TimeBound__Alternatives)?
{ after(grammarAccess.getTimeBoundAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDECIMAL
entryRuleDECIMAL 
:
{ before(grammarAccess.getDECIMALRule()); }
	 ruleDECIMAL
{ after(grammarAccess.getDECIMALRule()); } 
	 EOF 
;

// Rule DECIMAL
ruleDECIMAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDECIMALAccess().getGroup()); }
(rule__DECIMAL__Group__0)
{ after(grammarAccess.getDECIMALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Start__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getStartAssignment_0()); }
(rule__Start__StartAssignment_0)
{ after(grammarAccess.getStartAccess().getStartAssignment_0()); }
)

    |(
{ before(grammarAccess.getStartAccess().getPParserRuleCall_1()); }
	ruleP
{ after(grammarAccess.getStartAccess().getPParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStartAccess().getPGParserRuleCall_2()); }
	rulePG
{ after(grammarAccess.getStartAccess().getPGParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_0()); }
(rule__State__Group_0__0)
{ after(grammarAccess.getStateAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_1()); }
(rule__State__Group_1__0)
{ after(grammarAccess.getStateAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getGroup_0()); }
(rule__Label__Group_0__0)
{ after(grammarAccess.getLabelAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLabelAccess().getGroup_1()); }
(rule__Label__Group_1__0)
{ after(grammarAccess.getLabelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateOrLabel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateOrLabelAccess().getStateParserRuleCall_0()); }
	ruleState
{ after(grammarAccess.getStateOrLabelAccess().getStateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStateOrLabelAccess().getLabelParserRuleCall_1()); }
	ruleLabel
{ after(grammarAccess.getStateOrLabelAccess().getLabelParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__P__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getGroup_0()); }
(rule__P__Group_0__0)
{ after(grammarAccess.getPAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPAccess().getGroup_1()); }
(rule__P__Group_1__0)
{ after(grammarAccess.getPAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getCompareWithoutUnknownParserRuleCall_0()); }
	ruleCompareWithoutUnknown
{ after(grammarAccess.getCompareAccess().getCompareWithoutUnknownParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCompareAccess().getEqualsSignQuestionMarkKeyword_1()); }

	'=?' 

{ after(grammarAccess.getCompareAccess().getEqualsSignQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_0()); }
(rule__CompareWithoutUnknown__Group_0__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_1()); }
(rule__CompareWithoutUnknown__Group_1__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_2()); }
(rule__CompareWithoutUnknown__Group_2__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGroup_3()); }
(rule__CompareWithoutUnknown__Group_3__0)
{ after(grammarAccess.getCompareWithoutUnknownAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getGroup_0()); }
(rule__TimeBound__Group_0__0)
{ after(grammarAccess.getTimeBoundAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTimeBoundAccess().getGroup_1()); }
(rule__TimeBound__Group_1__0)
{ after(grammarAccess.getTimeBoundAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTimeBoundAccess().getGroup_2()); }
(rule__TimeBound__Group_2__0)
{ after(grammarAccess.getTimeBoundAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__State__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__0__Impl
	rule__State__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getStateAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__1__Impl
	rule__State__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_0_1()); }

	'State:' 

{ after(grammarAccess.getStateAccess().getStateKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__2__Impl
	rule__State__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_0_2()); }
(rule__State__NameAssignment_0_2)
{ after(grammarAccess.getStateAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getStateAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__State__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1__0__Impl
	rule__State__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_1_0()); }

	'State:' 

{ after(grammarAccess.getStateAccess().getStateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1_1()); }
(rule__State__NameAssignment_1_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Label__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__0__Impl
	rule__Label__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getLabelAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__1__Impl
	rule__Label__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelKeyword_0_1()); }

	'Label:' 

{ after(grammarAccess.getLabelAccess().getLabelKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__2__Impl
	rule__Label__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_0_2()); }
(rule__Label__NameAssignment_0_2)
{ after(grammarAccess.getLabelAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getLabelAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Label__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_1__0__Impl
	rule__Label__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLabelKeyword_1_0()); }

	'Label:' 

{ after(grammarAccess.getLabelAccess().getLabelKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_1_1()); }
(rule__Label__NameAssignment_1_1)
{ after(grammarAccess.getLabelAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__S__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__0__Impl
	rule__S__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getSKeyword_0()); }

	'S' 

{ after(grammarAccess.getSAccess().getSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__1__Impl
	rule__S__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getCompareParserRuleCall_1()); }
	ruleCompare
{ after(grammarAccess.getSAccess().getCompareParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__2__Impl
	rule__S__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getSAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__3__Impl
	rule__S__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getStateOrLabelParserRuleCall_3()); }
	ruleStateOrLabel
{ after(grammarAccess.getSAccess().getStateOrLabelParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__S__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__S__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__S__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getSAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__P__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_0__0__Impl
	rule__P__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getPKeyword_0_0()); }

	'P' 

{ after(grammarAccess.getPAccess().getPKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_0__1__Impl
	rule__P__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getCompareParserRuleCall_0_1()); }
	ruleCompare
{ after(grammarAccess.getPAccess().getCompareParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_0__2__Impl
	rule__P__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getLeftSquareBracketKeyword_0_2()); }

	'[' 

{ after(grammarAccess.getPAccess().getLeftSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_0__3__Impl
	rule__P__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getFKeyword_0_3()); }

	'F' 

{ after(grammarAccess.getPAccess().getFKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_0__4__Impl
	rule__P__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getTimeBoundParserRuleCall_0_4()); }
	ruleTimeBound
{ after(grammarAccess.getPAccess().getTimeBoundParserRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_0__5__Impl
	rule__P__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getStateOrLabelParserRuleCall_0_5()); }
	ruleStateOrLabel
{ after(grammarAccess.getPAccess().getStateOrLabelParserRuleCall_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getRightSquareBracketKeyword_0_6()); }

	']' 

{ after(grammarAccess.getPAccess().getRightSquareBracketKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__P__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__0__Impl
	rule__P__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getPKeyword_1_0()); }

	'P' 

{ after(grammarAccess.getPAccess().getPKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__1__Impl
	rule__P__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getCompareParserRuleCall_1_1()); }
	ruleCompare
{ after(grammarAccess.getPAccess().getCompareParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__2__Impl
	rule__P__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getLeftSquareBracketKeyword_1_2()); }

	'[' 

{ after(grammarAccess.getPAccess().getLeftSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__3__Impl
	rule__P__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getLEFTAssignment_1_3()); }
(rule__P__LEFTAssignment_1_3)
{ after(grammarAccess.getPAccess().getLEFTAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__4__Impl
	rule__P__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getUKeyword_1_4()); }

	'U' 

{ after(grammarAccess.getPAccess().getUKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__5__Impl
	rule__P__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getTimeBoundParserRuleCall_1_5()); }
	ruleTimeBound
{ after(grammarAccess.getPAccess().getTimeBoundParserRuleCall_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__6__Impl
	rule__P__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getRIGHTAssignment_1_6()); }
(rule__P__RIGHTAssignment_1_6)
{ after(grammarAccess.getPAccess().getRIGHTAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__P__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__P__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__P__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getRightSquareBracketKeyword_1_7()); }

	']' 

{ after(grammarAccess.getPAccess().getRightSquareBracketKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__PG__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__0__Impl
	rule__PG__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getPKeyword_0()); }

	'P' 

{ after(grammarAccess.getPGAccess().getPKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__1__Impl
	rule__PG__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getCompareParserRuleCall_1()); }
	ruleCompare
{ after(grammarAccess.getPGAccess().getCompareParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__2__Impl
	rule__PG__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getPGAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__3__Impl
	rule__PG__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getGKeyword_3()); }

	'G' 

{ after(grammarAccess.getPGAccess().getGKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__4__Impl
	rule__PG__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getPGAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__5__Impl
	rule__PG__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getLEFTAssignment_5()); }
(rule__PG__LEFTAssignment_5)
{ after(grammarAccess.getPGAccess().getLEFTAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__6__Impl
	rule__PG__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getEqualsSignGreaterThanSignKeyword_6()); }

	'=>' 

{ after(grammarAccess.getPGAccess().getEqualsSignGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__7__Impl
	rule__PG__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getPKeyword_7()); }

	'P' 

{ after(grammarAccess.getPGAccess().getPKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__8__Impl
	rule__PG__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getCompareWithoutUnknownParserRuleCall_8()); }
	ruleCompareWithoutUnknown
{ after(grammarAccess.getPGAccess().getCompareWithoutUnknownParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__9__Impl
	rule__PG__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getLeftSquareBracketKeyword_9()); }

	'[' 

{ after(grammarAccess.getPGAccess().getLeftSquareBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__10__Impl
	rule__PG__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getFKeyword_10()); }

	'F' 

{ after(grammarAccess.getPGAccess().getFKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__11__Impl
	rule__PG__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getTimeBoundParserRuleCall_11()); }
	ruleTimeBound
{ after(grammarAccess.getPGAccess().getTimeBoundParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__12__Impl
	rule__PG__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getRIGHTAssignment_12()); }
(rule__PG__RIGHTAssignment_12)
{ after(grammarAccess.getPGAccess().getRIGHTAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__13__Impl
	rule__PG__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getRightSquareBracketKeyword_13()); }

	']' 

{ after(grammarAccess.getPGAccess().getRightSquareBracketKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__14__Impl
	rule__PG__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getRightParenthesisKeyword_14()); }

	')' 

{ after(grammarAccess.getPGAccess().getRightParenthesisKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PG__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PG__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PG__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getRightSquareBracketKeyword_15()); }

	']' 

{ after(grammarAccess.getPGAccess().getRightSquareBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__CompareWithoutUnknown__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_0__0__Impl
	rule__CompareWithoutUnknown__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignKeyword_0_0()); }

	'>' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_0_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareWithoutUnknown__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_1__0__Impl
	rule__CompareWithoutUnknown__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_1_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareWithoutUnknown__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_2__0__Impl
	rule__CompareWithoutUnknown__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignEqualsSignKeyword_2_0()); }

	'>=' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getGreaterThanSignEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_2_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareWithoutUnknown__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_3__0__Impl
	rule__CompareWithoutUnknown__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignEqualsSignKeyword_3_0()); }

	'<=' 

{ after(grammarAccess.getCompareWithoutUnknownAccess().getLessThanSignEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareWithoutUnknown__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareWithoutUnknown__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareWithoutUnknown__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_3_1()); }
	ruleDECIMAL
{ after(grammarAccess.getCompareWithoutUnknownAccess().getDECIMALParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeBound__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_0__0__Impl
	rule__TimeBound__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getGreaterThanSignEqualsSignKeyword_0_0()); }

	'>=' 

{ after(grammarAccess.getTimeBoundAccess().getGreaterThanSignEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_0_1()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeBound__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_1__0__Impl
	rule__TimeBound__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getLessThanSignEqualsSignKeyword_1_0()); }

	'<=' 

{ after(grammarAccess.getTimeBoundAccess().getLessThanSignEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_1_1()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeBound__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_2__0__Impl
	rule__TimeBound__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getTimeBoundAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_2__1__Impl
	rule__TimeBound__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_2_1()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_2__2__Impl
	rule__TimeBound__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getCommaKeyword_2_2()); }

	',' 

{ after(grammarAccess.getTimeBoundAccess().getCommaKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_2__3__Impl
	rule__TimeBound__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_2_3()); }
	ruleDECIMAL
{ after(grammarAccess.getTimeBoundAccess().getDECIMALParserRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeBound__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeBound__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeBound__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeBoundAccess().getRightSquareBracketKeyword_2_4()); }

	']' 

{ after(grammarAccess.getTimeBoundAccess().getRightSquareBracketKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DECIMAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group__0__Impl
	rule__DECIMAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DECIMAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getGroup_1()); }
(rule__DECIMAL__Group_1__0)?
{ after(grammarAccess.getDECIMALAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DECIMAL__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group_1__0__Impl
	rule__DECIMAL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDECIMALAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DECIMAL__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Start__StartAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getStartSParserRuleCall_0_0()); }
	ruleS{ after(grammarAccess.getStartAccess().getStartSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__P__LEFTAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getLEFTStateOrLabelParserRuleCall_1_3_0()); }
	ruleStateOrLabel{ after(grammarAccess.getPAccess().getLEFTStateOrLabelParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__P__RIGHTAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPAccess().getRIGHTStateOrLabelParserRuleCall_1_6_0()); }
	ruleStateOrLabel{ after(grammarAccess.getPAccess().getRIGHTStateOrLabelParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PG__LEFTAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getLEFTStateOrLabelParserRuleCall_5_0()); }
	ruleStateOrLabel{ after(grammarAccess.getPGAccess().getLEFTStateOrLabelParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PG__RIGHTAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPGAccess().getRIGHTStateOrLabelParserRuleCall_12_0()); }
	ruleStateOrLabel{ after(grammarAccess.getPGAccess().getRIGHTStateOrLabelParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


