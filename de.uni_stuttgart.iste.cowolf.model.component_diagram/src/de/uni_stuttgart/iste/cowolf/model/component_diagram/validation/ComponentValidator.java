/**
 *
 * $Id$
 */
package de.uni_stuttgart.iste.cowolf.model.component_diagram.validation;

import de.uni_stuttgart.iste.cowolf.model.component_diagram.Component;
import de.uni_stuttgart.iste.cowolf.model.component_diagram.ComponentDiagram;
import de.uni_stuttgart.iste.cowolf.model.component_diagram.ComponentStereotype;
import de.uni_stuttgart.iste.cowolf.model.component_diagram.Dependency;
import de.uni_stuttgart.iste.cowolf.model.component_diagram.Port;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link de.uni_stuttgart.iste.cowolf.model.component_diagram.Component}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ComponentValidator {
	boolean validate();

	boolean validateStereotype(ComponentStereotype value);
	boolean validateIsIndirectlyInstantiated(boolean value);
	boolean validateComponentContainer(EList<Component> value);
	boolean validatePorts(EList<Port> value);
	boolean validateRealization(Component value);
	boolean validateDiagram(ComponentDiagram value);
	boolean validateOnDepend(EList<Dependency> value);
}
