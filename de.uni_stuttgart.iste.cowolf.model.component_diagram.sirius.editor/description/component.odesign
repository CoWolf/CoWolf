<?xml version="1.0" encoding="ASCII"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:filter="http://www.eclipse.org/sirius/diagram/description/filter/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" documentation="Copyright (c) 2009, 2014 Obeo.&#xA;All rights reserved. This program and the accompanying materials&#xA;are made available under the terms of the Eclipse Public License v1.0&#xA;which accompanies this distribution, and is available at&#xA;http://www.eclipse.org/legal/epl-v10.html&#xA;&#xA;Contributors:&#xA;     Obeo - initial API and implementation" name="UML2 modelers" version="8.1.0">
  <ownedViewpoints endUserDocumentation="To work on the fine grained structure and the behaviours of the application." name="Component" modelFileExtension="component_diagram">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Component Diagram" titleExpression="[name+' Component Diagram'/]" domainClass="uml.Package" enablePopupBars="true">
      <metamodel href="platform:/plugin/org.eclipse.uml2.uml/model/UML.ecore#/"/>
      <filters xsi:type="filter:CompositeFilterDescription" name="Hide connectors">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_Port2SubProvidedInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_Port2SubRequiredInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_ProvidedInterface2RequiredInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_RequiredInterface2ProvidedInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_SubProvidedInterface2Port'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_SubRequiredInterface2Port']"/>
      </filters>
      <defaultLayer name="Component diagram">
        <nodeMappings name="CO_ProvidedInterface" deletionDescription="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='CO_Delete%20Interface%20View']" createElements="false" domainClass="uml.Interface">
          <style xsi:type="style:BundledImageDescription" showIcon="false" sizeComputationExpression="2" shape="dot">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
          <conditionnalStyles predicateExpression="[container &lt;> self.eContainer()/]">
            <style xsi:type="style:BundledImageDescription" showIcon="false" sizeComputationExpression="2" shape="dot">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="CO_RequiredInterface" deletionDescription="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='CO_Delete%20Interface%20View']" createElements="false" domainClass="uml.Interface">
          <style xsi:type="style:CustomStyleDescription" showIcon="false" resizeKind="NSEW" id="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.ui.extension.rotableNode.requiredInterface">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="[container &lt;> self.eContainer()/]">
            <style xsi:type="style:CustomStyleDescription" showIcon="false" resizeKind="NSEW" id="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.ui.extension.rotableNode.requiredInterface">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="CO_U_Interface2ComponentOrPort" preconditionExpression="[target.validSourceTarget4Dependency(targetView, source, sourceView)/]" semanticCandidatesExpression="service:diagram.getUsageInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetFinderExpression="service:getClient" sourceFinderExpression="feature:supplier" domainClass="uml.Usage" useDomainElement="true" reconnections="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Usage%20source'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Usage%20target']">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_U_ComponentOrPort2Interface" label="CO_U_ComponentOrPort2Interface Never used exepted for edge creation tool" preconditionExpression="service:inactive" semanticCandidatesExpression="service:diagram.getUsageInverseRefs" semanticElements="service:getSemanticElements" documentation="This edge mapping has been added to handle a bidirectional edge creation tool." sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" targetFinderExpression="feature:supplier" sourceFinderExpression="service:getClient" domainClass="uml.Usage" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_IR_ComponentOrPort2Interface" preconditionExpression="[source.validSourceTarget4Dependency(sourceView, target, targetView)/]" semanticCandidatesExpression="service:diagram.getInterfaceRealizationInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']" targetFinderExpression="feature:supplier" sourceFinderExpression="service:getClient" domainClass="uml.InterfaceRealization" useDomainElement="true" reconnections="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Realization%20source'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Realization%20target']">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_IR_Interface2ComponentOrPort" label="CO_IR_Interface2ComponentOrPort Never used exepted for edge creation tool" preconditionExpression="service:inactive" semanticCandidatesExpression="service:diagram.getInterfaceRealizationInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" documentation="This edge mapping has been added to handle a bidirectional edge create tool." sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']" targetFinderExpression="service:getClient" sourceFinderExpression="feature:supplier" domainClass="uml.InterfaceRealization" useDomainElement="true" reconnections="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Realization%20source'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Realization%20target']">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_ComponentRealization" semanticCandidatesExpression="service:diagram.getComponentRealizationInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']" targetFinderExpression="feature:abstraction" sourceFinderExpression="feature:realizingClassifier" domainClass="uml.ComponentRealization" useDomainElement="true" reconnections="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20ComponentRealization']">
          <style lineStyle="dash" targetArrow="InputClosedArrow" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_Redefined" deletionDescription="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='CO_Delete%20Redefined']" semanticCandidatesExpression="feature:eAllContents" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetFinderExpression="feature:redefinedPort" sourceFinderExpression="var:self" domainClass="uml.Port" reconnections="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Redefined%20source'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Redefined%20target']">
          <style lineStyle="dot" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_C_ProvidedInterface2RequiredInterface" preconditionExpression="[source.validSourceTarget4Connector(sourceView, target, targetView)/]" semanticCandidatesExpression="service:diagram.getConnectorInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" targetFinderExpression="service:getTarget4ProvidedInterface2RequiredInterface" sourceFinderExpression="service:getSource4ProvidedInterface2RequiredInterface" targetExpression="var:self" domainClass="uml.Connector" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_C_RequiredInterface2ProvidedInterface" label="CO_C_RequiredInterface2ProvidedInterface Never used exepted for edge creation tool" preconditionExpression="service:inactive" semanticCandidatesExpression="service:diagram.getConnectorInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']" targetFinderExpression="service:getSource4ProvidedInterface2RequiredInterface" sourceFinderExpression="service:getTarget4ProvidedInterface2RequiredInterface" targetExpression="var:self" domainClass="uml.Connector" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_C_SubProvidedInterface2Port" preconditionExpression="[source.validSourceTarget4DelegatedConnector(sourceView, target, targetView)/]" semanticCandidatesExpression="service:diagram.getConnectorInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetFinderExpression="service:getTarget4SubProvidedInterface2Port" sourceFinderExpression="service:getSource4SubProvidedInterface2Port" targetExpression="var:self" domainClass="uml.Connector" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_C_Port2SubProvidedInterface" label="CO_C_Port2SubProvidedInterface Never used exepted for edge creation tool" preconditionExpression="service:inactive" semanticCandidatesExpression="service:diagram.getConnectorInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']" targetFinderExpression="service:getSource4SubProvidedInterface2Port" sourceFinderExpression="service:getTarget4SubProvidedInterface2Port" targetExpression="var:self" domainClass="uml.Connector" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_C_Port2SubRequiredInterface" preconditionExpression="[target.validSourceTarget4DelegatedConnector(targetView, source, sourceView)/]" semanticCandidatesExpression="service:diagram.getConnectorInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" targetFinderExpression="service:getTarget4Port2SubRequiredInterface" sourceFinderExpression="service:getSource4Port2SubRequiredInterface" targetExpression="var:self" domainClass="uml.Connector" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_C_SubRequiredInterface2Port" label="CO_C_SubRequiredInterface2Port Never used exepted for edge creation tool" preconditionExpression="service:inactive" semanticCandidatesExpression="service:diagram.getConnectorInverseRefs" semanticElements="service:getSemanticElements" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']" targetFinderExpression="service:getSource4Port2SubRequiredInterface" sourceFinderExpression="service:getTarget4Port2SubRequiredInterface" targetExpression="var:self" domainClass="uml.Connector" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="1">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="CO_Dependency" semanticCandidatesExpression="service:diagram.getDependencyOnlyInverseRefs" sourceMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']" targetMapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']" targetFinderExpression="feature:supplier" sourceFinderExpression="feature:client" domainClass="uml.Dependency" useDomainElement="true" reconnections="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Reconnect%20Dependency']">
          <style lineStyle="dash" sizeComputationExpression="1" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="[oclIsTypeOf(uml::Usage)/]">
            <style sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
              <centerLabelStyleDescription>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="CO_Component" preconditionExpression="[oclIsTypeOf(uml::Component) or oclIsTypeOf(uml::Class)/]" createElements="false" semanticElements="service:getSemanticElements" domainClass="uml.Class" reusedNodeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" reusedContainerMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']">
          <borderedNodeMappings name="CO_Port" semanticCandidatesExpression="[oclAsType(uml::StructuredClassifier).ownedAttribute->filter(uml::Port)->select(type &lt;> self)/]" semanticElements="service:getSemanticElements" domainClass="uml.Port">
            <style xsi:type="style:BundledImageDescription" labelFormat="italic" showIcon="false" sizeComputationExpression="2" resizeKind="EAST_WEST">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
            <conditionnalStyles predicateExpression="[redefinedPort->size() > 0/]">
              <style xsi:type="style:BundledImageDescription" labelFormat="italic" sizeComputationExpression="2">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelSize="9" labelFormat="bold" roundedCorner="true" widthComputationExpression="service:defaultWidth" heightComputationExpression="service:defaultHeight" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
          <conditionnalStyles predicateExpression="[(not self.oclIsTypeOf(uml::Class)) and (self.eContainer() &lt;> container) /]">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelSize="9" labelFormat="bold" roundedCorner="true" widthComputationExpression="service:defaultWidth" heightComputationExpression="service:defaultHeight" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[(self.oclIsTypeOf(uml::Class)) and (self.eContainer() = container) /]">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelSize="9" labelFormat="bold" roundedCorner="true" widthComputationExpression="service:defaultWidth" heightComputationExpression="service:defaultHeight" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[(self.oclIsTypeOf(uml::Class)) and (self.eContainer() &lt;> container) /]">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelSize="9" labelFormat="bold" roundedCorner="true" widthComputationExpression="service:defaultWidth" heightComputationExpression="service:defaultHeight" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <containerMappings name="CO_NestedPackage" createElements="false" semanticElements="service:getSemanticElements" domainClass="uml.Package" reusedNodeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" reusedContainerMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelSize="9" labelFormat="bold" labelExpression="service:computeUmlLabel" labelAlignment="LEFT" roundedCorner="true" widthComputationExpression="service:defaultWidth" heightComputationExpression="service:defaultHeight" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
          <conditionnalStyles predicateExpression="[self.eContainer() &lt;> container/]">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" labelSize="9" labelFormat="bold" labelExpression="service:computeUmlLabel" labelAlignment="LEFT" roundedCorner="true" widthComputationExpression="service:defaultWidth" heightComputationExpression="service:defaultHeight" backgroundStyle="GradientTopToBottom">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <toolSections name="CO_ExistingElements" label="Existing Elements">
          <ownedTools xsi:type="tool:OperationAction" name="CO_AddRelatedElements" label="Add Related Elements" forceRefresh="true" icon="/org.eclipse.search/icons/full/etool16/search.gif">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:views.getTarget">
                <subModelOperations xsi:type="tool:For" expression="service:getRelated">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="service:markForAutosize">
                    <subModelOperations xsi:type="tool:If" conditionExpression="service:isTypeOfClass">
                      <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']" containerViewExpression="var:diagram"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:If" conditionExpression="[oclIsTypeOf(uml::Interface)/]">
                      <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']" containerViewExpression="var:diagram"/>
                      <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" containerViewExpression="var:diagram"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Node">
          <ownedTools xsi:type="tool_1:ToolGroup" name="Component">
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Component" containerMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:CreateInstance" typeName="uml.Component" referenceName="packagedElement">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:computeDefaultName"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ContainerCreationDescription" name="Class" containerMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool:If" conditionExpression="[self.oclIsKindOf(uml::Package)/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="uml.Class" referenceName="packagedElement">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:computeDefaultName"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="[self.oclIsKindOf(uml::Class)/]">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="uml.Class" referenceName="nestedClassifier">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:computeDefaultName"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Port" nodeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@containerMappings[name='CO_Component']/@borderedNodeMappings[name='CO_Port']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="uml.Port" referenceName="ownedAttribute">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:computeDefaultName"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="aggregation" valueExpression="composite"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="CS_Add_TypedPort" label="Typed Port" precondition="[oclIsKindOf(uml::StructuredClassifier)/]" candidatesExpression="[getValidsForComponentDiagram()->select(eObject | eObject.oclIsKindOf(uml::Class) or eObject.oclIsKindOf(uml::Component) or eObject.oclIsKindOf(uml::Package))/]" tree="true" rootExpression="service:getAllRootsInSession" childrenExpression="[eContents()->select(eObject | eObject.oclIsKindOf(uml::Class) or eObject.oclIsKindOf(uml::Component) or eObject.oclIsKindOf(uml::Package))/]" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/Port.gif" windowTitle="Select the port type">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="uml.Port" referenceName="ownedAttribute">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:computeDefaultName"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="aggregation" valueExpression="composite"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="var:element"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="isConjugated" valueExpression="true"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Interface" nodeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_ProvidedInterface']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="uml.Interface" referenceName="packagedElement" variableName="newInterface">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="service:computeDefaultName"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:newInterface">
                  <subModelOperations xsi:type="tool_1:CreateView" mapping="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@nodeMappings[name='CO_RequiredInterface']" containerViewExpression="var:containerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <subSections name="edit"/>
        </toolSections>
        <toolSections name="Edge">
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Usage" precondition="[preSource.createDependencyConnectionCompletePrecondition(preSourceView, preTarget, preTargetView, container, diagram)/]" edgeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_U_Interface2ComponentOrPort'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_U_ComponentOrPort2Interface']" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/Usage.gif" connectionStartPrecondition="[preSource.createDependencyConnectionStartPrecondition(preSourceView, container, diagram)/]">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:If" conditionExpression="[source.oclIsKindOf(uml::Interface)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="service:target.createHelperUsage(source)"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclIsKindOf(uml::Interface)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="service:source.createHelperUsage(target)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Interface Realization" precondition="[preSource.createDependencyConnectionCompletePrecondition(preSourceView, preTarget, preTargetView, container, diagram)/]" edgeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_IR_ComponentOrPort2Interface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_IR_Interface2ComponentOrPort']" connectionStartPrecondition="[preSource.createDependencyConnectionStartPrecondition(preSourceView, container, diagram)/]">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:If" conditionExpression="[source.oclIsKindOf(uml::Interface)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="[target.createHelperInterfaceRealization(source)/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="[target.oclIsKindOf(uml::Interface)/]">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="service:source.createHelperInterfaceRealization(target)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Connector" label="Connector" precondition="[preSource.isConnectable(preSourceView, preTarget, preTargetView)/]" edgeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_ProvidedInterface2RequiredInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_RequiredInterface2ProvidedInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_SubProvidedInterface2Port'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_Port2SubProvidedInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_Port2SubRequiredInterface'] //@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_C_SubRequiredInterface2Port']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[createConnector(sourceView, targetView)/]"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Dependency" precondition="[preTarget.oclIsKindOf(uml::Classifier)/]" edgeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_Dependency']" connectionStartPrecondition="[preSource.oclIsKindOf(uml::Classifier)/]">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:If" conditionExpression="service:isComponent">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="uml.Dependency" referenceName="packagedElement">
                    <subModelOperations xsi:type="tool:SetValue" featureName="supplier" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="client" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="&lt;&lt;dependency>>"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Component Realization" precondition="[preTarget.oclIsKindOf(uml::Component)/]" edgeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_ComponentRealization']" connectionStartPrecondition="[preSource.oclIsKindOf(uml::Classifier)/]">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="service:createComponentRealization(target)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="Redefined" edgeMappings="//@ownedViewpoints[name='Component']/@ownedRepresentations[name='Component%20Diagram']/@defaultLayer/@edgeMappings[name='CO_Redefined']" iconPath="/org.eclipse.uml2.uml.edit/icons/full/obj16/Association.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="redefinedPort" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect Usage source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="supplier" elementExpression="feature:supplier">
                  <subModelOperations xsi:type="tool:SetValue" featureName="supplier" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect Usage target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:target" featureName="packagedElement">
                  <subModelOperations xsi:type="tool:Unset" featureName="client" elementExpression="var:source"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="client" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect Realization source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="client" elementExpression="var:source">
                  <subModelOperations xsi:type="tool:MoveElement" newContainerExpression="var:target" featureName="interfaceRealization"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="client" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect Realization target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="supplier" elementExpression="var:source">
                  <subModelOperations xsi:type="tool:SetValue" featureName="supplier" valueExpression="var:target"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:Unset" featureName="contract" elementExpression="var:source">
                  <subModelOperations xsi:type="tool:SetValue" featureName="contract" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect Redefined source" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool:SetValue" featureName="redefinedPort" valueExpression="[edgeView.oclAsType(diagram::DEdge).targetNode.oclAsType(diagram::DSemanticDecorator).target/]"/>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                  <subModelOperations xsi:type="tool:Unset" featureName="redefinedPort" elementExpression="[edgeView.oclAsType(diagram::DEdge).targetNode.oclAsType(diagram::DSemanticDecorator).target/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect Redefined target">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="[edgeView.oclAsType(diagram::DEdge).sourceNode.oclAsType(diagram::DSemanticDecorator).target/]">
                <subModelOperations xsi:type="tool:Unset" featureName="redefinedPort" elementExpression="var:source"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="redefinedPort" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect ComponentRealization" reconnectionKind="RECONNECT_BOTH">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:element.reconnectEdge(edgeView, sourceView, targetView, source, target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ReconnectEdgeDescription" name="Reconnect Dependency" reconnectionKind="RECONNECT_BOTH">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:element.reconnectEdge(edgeView, sourceView, targetView, source, target)"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
        <toolSections name="delete">
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="CO_Delete Interface View">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="CO_Delete Redefined">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:Unset" featureName="redefinedPort" elementExpression="[element.oclAsType(uml::Port).redefinedPort/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="CO_Delete Usage From Port">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="type"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Profiles">
        <toolSections name="Profiles"/>
      </additionalLayers>
      <additionalLayers name="Comments" activeByDefault="true">
        <toolSections name="Comments"/>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UMLServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UMLProfileServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.LabelServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.EcoreServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UIServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.ObjectServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UIConnectorServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.ConnectorServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.OperationServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.PropertyServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.DependencyServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UIDependencyServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.CompositeStructureServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UICompositeStructureServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UIComponentServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.PackageableElementServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.ClassDiagramServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.DeploymentServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.ActivityServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.SequenceServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.OperationServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.UIServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.EcoreServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.StatemachineServices"/>
    <ownedJavaExtensions qualifiedClassName="de.uni_stuttgart.iste.cowolf.model.component_diagram.sirius.editor.services.DebugServices"/>
  </ownedViewpoints>
</description:Group>
